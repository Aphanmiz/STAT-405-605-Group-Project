\documentclass[10pt]{article}

% Formatting packages below.
\usepackage[left=1in,right=1in,top=1in,bottom=1in]{geometry}
\usepackage{float}
\usepackage{booktabs}
\usepackage{caption}
\usepackage{subcaption}
\usepackage{graphicx}

\begin{document}
\SweaveOpts{concordance=TRUE}
\title{Interpreting The Effect Of COVID On Motor Vehicle Accidents in the New York Metropolitan Area}
\author{Jian Ruan, Zach Yu, Carrie Hashimoto, Sophia Lyu (Undergraduate), Patrick Yee (Graduate)}
\maketitle

% Install some packages
<<install_packs, eval=TRUE, dev="png", echo=FALSE>>=
# # UNCOMMENT THIS CELL IF RUNNING ON A NEW MACHINE
# packs <- c("`ae.sty'","`grfext.sty'", "`caption.sty'", "'subcaption.sty'")
# 
# for (i in 1:length(packs)) {
#     tinytex::parse_install(text = paste('! LaTeX Error: File', packs[i],'not found.'))
# }
# ggplot
#install.packages("ggplot2",  repos="http://cran.us.r-project.org")
@



% THIS CELL IMPORTS DATA AND VARIOUS FORMATTING ELEMENTS.
<<import_data, eval=TRUE, dev="png", echo=FALSE>>=
# Libraries.
library(ggplot2)
library(stringi)
library(stringr)
library(ggmap) #Retrieve raster map tiles from popular mapping services
library(osmdata) #OpenStreetMap data 
library(pacman) #Base library > intuitively named functions

library(leaflet)
library(rgdal)
library(tidyr)

# Primary data here.
data.all <- read.csv("./data/Motor_Vehicle_Collisions_-_Crashes.csv")

# Weather data here.
data.weather <- read.csv("./data/weatherdataJFK.csv")

# Length of primary data
n <- 1968341

data.nytimes <- read.csv("./NYT_articles/nyt_articles_2018.csv")
  for (j in 2019:2021){
    csv.new <- paste0("./NYT_articles/nyt_articles_", j, ".csv")
    data.nytimes <- rbind(data.nytimes, read.csv(csv.new))
  }

# Text theme, used in ggplot for formatting.
text.theme = theme(
  axis.title.x = element_text(size = 16),
  axis.text.x = element_text(size = 14),
  axis.title.y = element_text(size = 16),
  plot.title= element_text(size=20))

convert.date <- function(date){
    # Automatically detects date format and makes conversion
    holder <- strsplit(date, "/")[[1]]
    typecheck = (length(holder)>1)
    if (typecheck){
      return(paste0(holder[3], "-", holder[1], "-", holder[2]))
    } else {
      holder <- strsplit(date, "-")[[1]]
      return(paste0(holder[2], "/", holder[3], "/", holder[1]))
    }
}

@

\section{Introduction}
COVID-19 quarantine limited people to remote work and in-home activities. It's likely that the COVID-19 restriction of transportation decreased the number of car crashes in NYC. To test out our hypothesis, we first compare and contrast the car crash distribution through geographical mapping, and later through time-series analysis and free-text analysis based on New York Times articles. 

\section{Geographical Distribution Of Car Crashes Before And After COVID }

\begin{figure}[H]
\centering
% THIS CELL GENERATES THE GIS Plot
<<echo=FALSE, width=8, height=8, fig=TRUE>>=
{
  #1. Convert Date Data
  data.all$CRASH.DATE <- as.Date(data.all$CRASH.DATE,"%m/%d/%Y") 
  
  #2. Clean data - get rid of NA
  data.all %>% 
    drop_na('LATITUDE') %>% 
    drop_na('LONGITUDE')  -> data.all_noNA
  
  #3. GIS data from OpenStreetMap
  pacman::p_load(ggmap, osmdata)
  nyc_map <- lisbon_map <- get_map( getbb('new york city'), source="stamen") #Google Map requires key to API, but stamen doesn't. 
  g <- ggmap(nyc_map)
  
  # Map the crash occurance on the map
  # Before COVID
  df_before <- data.all_noNA[data.all_noNA$CRASH.DATE < "2020-01-01" & data.all_noNA$CRASH.DATE > "2019-01-01",]
  
  g + geom_point(data=df_before, aes(x=LONGITUDE, y=LATITUDE),size=0.0001, alpha=0.1, color="blue") + labs(title = "Crash Occurances Before COVID (2019 - 2020)", y = "LONGITUDE", x = "LATITUDE")
  
  # After COVID
  df_after<- data.all_noNA[data.all_noNA$CRASH.DATE < "2021-01-01" & data.all_noNA$CRASH.DATE > "2020-01-01",]
  
  g + geom_point(data=df_after, aes(x=LONGITUDE, y=LATITUDE),size=0.0001, alpha=0.1, color="blue") + labs(title = "Crash Occurances After COVID (2020 - 2021)", y = "LONGITUDE", x = "LATITUDE")
  
}
@
\caption{Accidents Distribution Before vs After COVID.}
\end{figure}

Each incident is mapped as a blue dot (x = lattitude,y = longitude) based on the OpenStreetMap API for New York City. The bluer the area shows, the more accidents happened. \\

\noindent As shown in Figure 1, there is a sudden decrease in the number of accidents coinciding with the start of the COVID-19 pandemic, especially around the two most populous areas - Manhattan and Brooklyn. Since COVID transmitted quickly among large group of population, Manhattan and Brooklyn were the top two areas with people tested positive at the start of 2020. As a result, the quarantine policy for Manhattan and Brooklyn was more strict than other places, and people adapted to online activities to avoid infection.


\section{Time Series Ribbon Plot}
\begin{figure}[H]
\centering
% THIS CELL GENERATES THE RIBBON PLOT.
<<echo=FALSE, width=8, height=8, fig=TRUE>>=
{
  # Build crash data/day df
  # ---------- THIS CODE MAY COME IN HANDY LATER!
  dates.raw <- data.all$CRASH.DATE
  dates <- data.weather$DATE
  crashcounts.date <- c()
  for (date in dates){
    crashcounts.date <- append(crashcounts.date, length(dates.raw[dates.raw==convert.date(date)]))
  }
  
  datecount.df <- data.frame(date=dates, num.crashes=crashcounts.date)
  # ----------
  # Calc monthly statistics
  oldmonth <- "01"
  month.stats <- c()
  monthcounts <- c()
  for (j in 1:3652){
    newmonth <- substr(dates[j], 6, 7)
    
    # If month changes, add stats to result vector and reset monthcounts.
    if (newmonth!=oldmonth) {
      oldmonth <- newmonth
      month.stats <- append(month.stats, mean(monthcounts))
      month.stats <- append(month.stats, min(monthcounts))
      month.stats <- append(month.stats, max(monthcounts))
      monthcounts <- c()
      
    # Otherwise, add day's count to monthcounts
    } else {
      monthcounts <- append(monthcounts, crashcounts.date[j])
    }
  }
  result <- matrix(month.stats, ncol=3, byrow=TRUE)
  
  # Make ribbon plot
  ribbon.df <- data.frame(idx=1:119, avg=result[, 1], mins=result[, 2], maxis=result[, 3])
  ggplot(ribbon.df) + geom_line(aes(x=idx, y=avg), col="blue") + geom_ribbon(aes(ymin=mins, ymax=maxis, x=idx), alpha=0.25) + xlab("Time") + ylab("Num crashes (mean, min, max)") + scale_x_continuous(breaks=c(0, 24, 48, 72, 96, 120), labels=c("2013", "2015", "2017", "2019", "2021", "2023")) + ggtitle("Mean, min and max crashes/month") + text.theme
}
@
\caption{Ribbon Plot}
\end{figure}

As base and ggplots were being made in the previous analysis, it came to our attention that the number of crashes changed significantly around the onset of the COVID-19 pandemic.The ribbon plot created above shows a clear drop in the number of crashes for the beginning of 2020, which was roughly when the pandemic started, followed by a partial rebound later in the year. The blue line represents the mean value of car crashes per month, bounded by the maximum and minimum values in the grey area. 


\section{Free-text Analysis Based On New York Times Articles}

\begin{figure}[H]
\centering
% THIS CELL DOES REGEX ON NYTIMES DATA AND PLOTS COV MENTIONS VS CRASHES.
<<echo=FALSE, width=8, height=8, fig=TRUE>>=
{ # Lots of stuff in this cell! Prepare data for logit.
  
  # Build crash data/day df
  # ---------- THIS CODE MAY COME IN HANDY LATER!
  { # This cell makes of num crashes for each day and makes a vector simply containin names of months.
    dates.raw <- data.all$CRASH.DATE
    dates <- data.weather$DATE
    crashcounts.date <- c()
    for (date in dates){
      crashcounts.date <- append(crashcounts.date, length(dates.raw[dates.raw==convert.date(date)]))
    }
    
    datecount.df <- data.frame(date=dates, num.crashes=crashcounts.date)
    
    # Make list of month names for convenience
    month.names <- c()
    for (j in 1:119) {
      yr <- 2013+floor(j/12)
      month <- j%%12
      month <- ifelse(month==0, 12, month)
      yr <- ifelse(month==12, yr-1, yr)
      month.names <- append(month.names, paste0(yr, "-", month))
    }
  }
  # ----------
  { # This cell makes a df of avg, min, max, and perc25 crashes/month.
    # Calc monthly statistics
    oldmonth <- "01"
    month.stats <- c()
    monthcounts <- c()
    for (j in 1:3652){
      newmonth <- substr(dates[j], 6, 7)
      
      # If month changes, add stats to result vector and reset     monthcounts.
      if (newmonth!=oldmonth) {
        oldmonth <- newmonth
        month.stats <- append(month.stats, mean(monthcounts))
        month.stats <- append(month.stats, min(monthcounts))
        month.stats <- append(month.stats, max(monthcounts))
        monthcounts <- c()
        
        # Otherwise, add day's count to monthcounts
      } else {
        monthcounts <- append(monthcounts, crashcounts.date[j])
      }
    }
    result <- matrix(month.stats, ncol=3, byrow=TRUE)
    ribbon.df <- data.frame(month=month.names, idx=1:119, avg=result[, 1], mins=result[, 2], maxis=result[, 3])
    # 25% percentile
    percentile = 25
    perc25 <- sort(ribbon.df$avg)[ceiling(119*percentile/100)]
    lowcrashes <- c()
    for (j in 1:119) {
      lowcrashes[j] <- ifelse(result[j, 1]<perc25, 1, 0)
    }
    ribbon.df <- cbind(ribbon.df, data.frame(has.low.crash.count=lowcrashes))
    df.short <- ribbon.df[61:107, ]
  }
  
  ggplot(df.short) + geom_point(aes(x=idx, y=has.low.crash.count))
  
  { # This cell runs regex on nytimes and creates a count of mentions of covid in titles or abstracts.
    cov.reg <- regex("COVID|virus|sars|pandemic|wuhan", ignore_case=TRUE)
    nyt.len <- 152068
    # Initialize some stuff for easy handling
    pubdates <- data.nytimes$pub_date
    headlines <- data.nytimes$headline
    abstracts <- data.nytimes$abstract
    
    # Do search
    mention.counts <- 0*1:47
    month.counts <- 0*1:47
    for (j in 1:nyt.len){
      pubyr <- as.numeric(substr(pubdates[j], 1, 4))
      pubmnth <- as.numeric(substr(pubdates[j], 6, 7))
      month <- 12*(pubyr-2013) + pubmnth
      news.data <- paste0(headlines[j], abstracts[j])
      mention.counts[month-61] <- mention.counts[month-61] + ifelse(str_detect(news.data, cov.reg), 1, 0)
      month.counts[month-61] <- month.counts[month-61] + 1
    }
    # Assmple into df
    # Outliers at 86, 87 of df.short
    df.short <- cbind(df.short, data.frame(raw.cov.mentions=mention.counts))
    df.short <- cbind(df.short, data.frame(prop.cov.mentions=mention.counts/month.counts))
  }
}
{
  linmodel <- lm(avg ~ prop.cov.mentions, data=df.short)
  ggplot(data=df.short) + geom_point(aes(x=prop.cov.mentions, y=avg)) +
    geom_abline(slope=-1204.10, intercept=571.91, col="red")
  # summary(linmodel)
}
@
\caption{Free-text Analysis}
\end{figure}

The trend from the Ribbon Plot led us to ask the question of how the COVID-19 pandemic affected the transportation in New York City. To further see if the transportation within New York City was really affected by the pandemic, a dataset with headlines of every article from The New York Times from 2018 was collected. A plot of average number of crashes per day in a month vs the number of mentions of something virus/pandemic related in the headline is plotted.\\

\noindent Through this linear regression model, we see there's a negative correlation between the average number of crashes per day with the mention of COVID in news. It is reasonable since people were more aware of the COVID outbreaks and chose to stay at home instead of going out, leading to a lower probability of car crashes. 

\section{Contributing Factors Of Accidents Across Time}

\begin{figure}[H]
\centering
\caption{Piechart}
\end{figure}

Since a notable decrease in the number of crashes per day was observed at the onset of the COVID-19 pandemic, we wanted to explore whether any change in the composition of the causes of crashes was observed when the pandemic began. To this end, pie plots showing the relative frequency of each of the top ten contributing factors in the data set by year were created. However, the distribution does not show a significant difference among different years.


\end{document}


